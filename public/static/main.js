document.addEventListener("DOMContentLoaded", async () => {
    // –§–æ—Ä–º—ã
    const loginForm = document.getElementById("loginForm");
    const registerForm = document.getElementById("registerForm");

    // –ö–Ω–æ–ø–∫–∏
    const main_login_button = document.getElementById("main_login_button");
    const enter_to_account = document.getElementById("enter_to_account");

    // –ü–∞–Ω–µ–ª–∏
    const userPanel = document.getElementById("user_panel");

    //–ú–æ–¥–∞–ª—å–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    const modalContainer = document.getElementById("modal_windows");

    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    if (localStorage.getItem("token")) {
        fetchUserData();
    } else {
        updateUserInterface();
    }

    function updateUserInterface() {
        console.log("–ü—Ä–æ–≤–µ—Ä–∫–∞")
        const username = localStorage.getItem("username");
        if (username) {
            // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–º—è –∏ "–í—ã–π—Ç–∏"
            userPanel.innerHTML = `
                <div class="flex items-center space-x-3">
                    <span class="font-bold">${username}</span>
                    <button id="logout_btn" class="cursor-pointer bg-red-500 text-white px-3 py-1 rounded">–í—ã–π—Ç–∏</button>
                </div>
            `;
            document.getElementById("logout_btn").addEventListener("click", logout);
        } else {
            // –ï—Å–ª–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º "–í–æ–π—Ç–∏"
            userPanel.innerHTML = `
                <button id="main_login_button" data-modal-target="loginModal" data-modal-toggle="loginModal" class="cursor-pointer bg-white text-blue-600 font-semibold py-2 px-4 rounded-lg hover:bg-gray-100 hover:shadow-md transition">
                    –í–æ–π—Ç–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç
                </button>
            `;
            document.getElementById("main_login_button").addEventListener("click", () => {
                openModal("loginModal");
            });
        }
    }

    async function fetchUserData() {
        console.log("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");
        const token = localStorage.getItem("token");
    
        if (!token) {
            console.log("‚ùå –¢–æ–∫–µ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.");
            return;
        }

        try {
            const response = await fetch("http://127.0.0.1:8080/user", { // –£–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π URL
                method: "GET",
                headers: {
                    "Content-Type": "application/json",
                    "Authorization": `Bearer ${token}` // –î–æ–ª–∂–µ–Ω –±—ã—Ç—å "Bearer TOKEN"
                }
            });
    
            if (!response.ok) {
                throw new Error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: " + response.statusText);
            }
    
            const data = await response.json();
            console.log("‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–ª—É—á–µ–Ω—ã:", data);
    
            // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            localStorage.setItem("username", data.username);
            updateUserInterface(); // –û–±–Ω–æ–≤–ª—è–µ–º UI
    
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error);
        }
    }

    function logout() {
        localStorage.removeItem("token");
        localStorage.removeItem("username");
        updateUserInterface();
    }

    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–∞–ª–æ–∫ —Å —Å–µ—Ä–≤–µ—Ä–∞
    async function getModalFiles() {
        try {
            console.log("üîÑ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ /api/modals...");
            const response = await fetch("http://localhost:8080/api/modals"); // –£–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—Ç
    
            console.log("üì° –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", response); // –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞
    
            if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–∞–ª–æ–∫: ${response.status} ${response.statusText}`);
    
            const jsonData = await response.json();
            console.log("‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω—ã –º–æ–¥–∞–ª–∫–∏:", jsonData);
            return jsonData;
        } catch (error) {
            console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–ø–∏—Å–∫–∞ –º–æ–¥–∞–ª–æ–∫:", error);
            return []; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤, —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
        }
    }

    // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ HTML –º–æ–¥–∞–ª–æ–∫
    async function loadModals() {
        const modalFiles = await getModalFiles();
        for (const file of modalFiles) {
            try {
                const response = await fetch(`/public/static/modals/${file}`);
                if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ ${file}`);

                const modalHtml = await response.text();
                modalContainer.innerHTML += modalHtml; // –î–æ–±–∞–≤–ª—è–µ–º –º–æ–¥–∞–ª–∫—É –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
            } catch (error) {
                console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞:", error);
            }
        }
    }

    await loadModals(); // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–∞–ª–∫–∏ –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏

    function showOverlay() {
        const overlay = document.createElement("div");
        overlay.className = "bg-gray-900/50 dark:bg-gray-900/80 fixed inset-0 z-40";
        overlay.id = "custom-overlay"; // –î–æ–±–∞–≤–ª—è–µ–º ID –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
        document.body.appendChild(overlay);
    }

    function removeOverlay() {
        const overlay = document.getElementById("custom-overlay");
        if (overlay) {
            overlay.remove();
        }
    }

    // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è/–∑–∞–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª–æ–∫
    function openModal(modalId) {
        const modal = document.getElementById(modalId);
        const modalContent = modal.querySelector(".modalContent");
        if (modal) {
            modal.setAttribute("aria-hidden", "false");
            modal.classList.remove("hidden");

            // –ê–Ω–∏–º–∞—Ü–∏—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è
            setTimeout(() => {
                modalContent.classList.remove("opacity-0", "scale-90");
                modalContent.classList.add("opacity-100", "scale-100");
            }, 200);
        }
        
        // –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        document.body.classList.add("overflow-hidden");
        showOverlay();
    }

    function closeModal(modalId) {
        const modal = document.getElementById(modalId);
        const modalContent = modal.querySelector(".modalContent");
        if (modal) {
            modal.setAttribute("aria-hidden", "true");
            modalContent.classList.remove("opacity-100", "scale-100");
            modalContent.classList.add("opacity-0", "scale-90");

            setTimeout(() => {
                modal.classList.add("hidden");
                document.body.classList.remove("overflow-hidden");
                removeOverlay();
            }, 300);
        }
    }

    // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–∞–ª–æ–∫, –∑–∞—Ç–µ–º –Ω–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    setTimeout(() => {
        if (main_login_button) {
            main_login_button.addEventListener("click", () => {
                openModal("loginModal")
            });
        }
        document.getElementById("enter_to_account").addEventListener("click", async () => {
            console.log("üî• –ö–Ω–æ–ø–∫–∞ –í–û–ô–¢–ò –Ω–∞–∂–∞—Ç–∞!");
    
            const usernameInput = document.getElementById("login_username_input");
            const passwordInput = document.getElementById("login_password_input");
    
            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –æ–±–∞ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã
            if (!usernameInput.value.trim() || !passwordInput.value.trim()) {
                alert("–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å!");
                return;
            }
    
            const userData = {
                username: usernameInput.value.trim(),
                password: passwordInput.value.trim()
            };
            console.log("üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:", userData);
    
            try {
                const response = await fetch("http://127.0.0.1:8080/login", {
                    method: "POST",
                    headers: { "Content-Type": "application/json" },
                    body: JSON.stringify(userData)
                });
    
                if (!response.ok) {
                    const errorText = await response.text();
                    throw new Error("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " + errorText);
                }
    
                console.log("‚úÖ –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—Ç–∏–ª —É—Å–ø–µ—à–Ω–æ!");
    
                const result = await response.json();
                console.log("‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞:", result);
    
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –∏ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                localStorage.setItem("token", result.token);
                localStorage.setItem("username", result.username);
                console.log("token: ", localStorage.getItem("token"));
                console.log("token: ", localStorage.getItem("username"));
                
                console.log("–ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—Ö–æ–¥–∞...");
                closeModal("loginModal"); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
                await fetchUserData();
                updateUserInterface(); // –û–±–Ω–æ–≤–ª—è–µ–º UI
    
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:", error);
                alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: " + error.message);
            }
        });
        document.querySelectorAll(".closeModal").forEach((button) => {
            button.addEventListener("click", () => {
                const activeModal = document.querySelector(".modal:not(.hidden)"); // –ù–∞–π—Ç–∏ –∞–∫—Ç–∏–≤–Ω—É—é –º–æ–¥–∞–ª–∫—É
                if (activeModal) {
                    closeModal(activeModal.id);
                }
            });
        });
        document.getElementById("register_button").addEventListener("click", () => {
            const loginModal = document.getElementById("loginModal");
            const registerModal = document.getElementById("registerModal");
            loginModal.classList.add("hidden");
            registerModal.classList.remove("hidden");
            loginModal.setAttribute("aria-hidden", "false");
            registerModal.setAttribute("aria-hidden", "false");

            const modalContent = registerModal.querySelector(".modalContent");
            registerModal.querySelector(".modalContent").classList.remove("opacity-0", "scale-90");
            registerModal.querySelector(".modalContent").classList.add("opacity-100", "scale-100");
        });
        document.getElementById("back_to_login_button").addEventListener("click", () => {
            const registerModal = document.getElementById("registerModal");
            const loginModal = document.getElementById("loginModal");
            registerModal.classList.add("hidden");
            loginModal.classList.remove("hidden");
            registerModal.setAttribute("aria-hidden", "false");
            loginModal.setAttribute("aria-hidden", "false");
        });

        // üìå **–î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏**
        if (registerForm) {
            registerForm.addEventListener("submit", async (event) => {
                event.preventDefault();

                const formData = new FormData(registerForm);
                const userData = {
                    username: formData.get("username"),
                    email: formData.get("email"),
                    password: formData.get("password")
                };

                try {
                    const response = await fetch("http://127.0.0.1:8080/register", {
                        method: "POST",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify(userData)
                    });

                    if (!response.ok) {
                        throw new Error("–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + response.statusText);
                    }

                    const result = await response.text();
                    alert(result);

                    closeModal("registerModal");
                    openModal("loginModal");

                } catch (error) {
                    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:", error);
                    alert("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: " + error.message);
                }
            });
        }
    }, 1000);
});